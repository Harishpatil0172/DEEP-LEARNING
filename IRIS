{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled45.ipynb",
      "provenance": [],
      "mount_file_id": "1xVWc9UFdruVyQeL-CXSLCjUEqZqVc1P4",
      "authorship_tag": "ABX9TyP5SiU7eAb1yXh2ODF/MPG6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Harishpatil0172/DEEP-Learning/blob/main/IRIS\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "hXiowaD6L7k-"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df =  pd.read_csv('/content/iris.csv')\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "PNmGa8O3MDSa",
        "outputId": "116ab99a-83e7-41ec-9911-2ebda74b2d40"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-5c69aa65-de7b-4dcc-85db-a9a5a3d2d401\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal.length</th>\n",
              "      <th>sepal.width</th>\n",
              "      <th>petal.length</th>\n",
              "      <th>petal.width</th>\n",
              "      <th>variety</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c69aa65-de7b-4dcc-85db-a9a5a3d2d401')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5c69aa65-de7b-4dcc-85db-a9a5a3d2d401 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5c69aa65-de7b-4dcc-85db-a9a5a3d2d401');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   sepal.length  sepal.width  petal.length  petal.width variety\n",
              "0           5.1          3.5           1.4          0.2  Setosa\n",
              "1           4.9          3.0           1.4          0.2  Setosa\n",
              "2           4.7          3.2           1.3          0.2  Setosa\n",
              "3           4.6          3.1           1.5          0.2  Setosa\n",
              "4           5.0          3.6           1.4          0.2  Setosa"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KifyyTNaMDV5",
        "outputId": "d5cb6de5-8115-412c-bef8-f22648f69109"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "sepal.length    0\n",
              "sepal.width     0\n",
              "petal.length    0\n",
              "petal.width     0\n",
              "variety         0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "uX9TaN0aMDYw",
        "outputId": "33535731-4761-47d0-a908-d3fe4d617622"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-4d88ad8a-254f-4334-8943-2075a0c1c172\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal.length</th>\n",
              "      <th>sepal.width</th>\n",
              "      <th>petal.length</th>\n",
              "      <th>petal.width</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>150.000000</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>150.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5.843333</td>\n",
              "      <td>3.057333</td>\n",
              "      <td>3.758000</td>\n",
              "      <td>1.199333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.828066</td>\n",
              "      <td>0.435866</td>\n",
              "      <td>1.765298</td>\n",
              "      <td>0.762238</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>4.300000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>5.100000</td>\n",
              "      <td>2.800000</td>\n",
              "      <td>1.600000</td>\n",
              "      <td>0.300000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5.800000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>4.350000</td>\n",
              "      <td>1.300000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.400000</td>\n",
              "      <td>3.300000</td>\n",
              "      <td>5.100000</td>\n",
              "      <td>1.800000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.900000</td>\n",
              "      <td>4.400000</td>\n",
              "      <td>6.900000</td>\n",
              "      <td>2.500000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d88ad8a-254f-4334-8943-2075a0c1c172')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4d88ad8a-254f-4334-8943-2075a0c1c172 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4d88ad8a-254f-4334-8943-2075a0c1c172');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       sepal.length  sepal.width  petal.length  petal.width\n",
              "count    150.000000   150.000000    150.000000   150.000000\n",
              "mean       5.843333     3.057333      3.758000     1.199333\n",
              "std        0.828066     0.435866      1.765298     0.762238\n",
              "min        4.300000     2.000000      1.000000     0.100000\n",
              "25%        5.100000     2.800000      1.600000     0.300000\n",
              "50%        5.800000     3.000000      4.350000     1.300000\n",
              "75%        6.400000     3.300000      5.100000     1.800000\n",
              "max        7.900000     4.400000      6.900000     2.500000"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['variety'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lCnxQ5uWMDbg",
        "outputId": "6b84178c-ae10-4b37-e62e-ae0255195e14"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Setosa        50\n",
              "Virginica     50\n",
              "Versicolor    50\n",
              "Name: variety, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:,0:4].values\n",
        "y = df['variety'].values"
      ],
      "metadata": {
        "id": "T-SXJlP8MDd7"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "encoder = LabelEncoder()\n",
        "y1 = encoder.fit_transform(y)\n",
        "Y=pd.get_dummies(y1).values\n"
      ],
      "metadata": {
        "id": "lNv_avnyMDgk"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i6-9YCDLMDi8",
        "outputId": "e82f47ea-a867-49fb-c621-80ee885284ab"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
              "       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n",
              "       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n",
              "       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TVaQO9kmMDlw",
        "outputId": "e72c8d13-2347-4d63-e769-9e6b3db3a376"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1]], dtype=uint8)"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "wpCN5bpyPKum"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train,X_test,y_train,y_test= train_test_split(X,Y,test_size=0.2,random_state=12)"
      ],
      "metadata": {
        "id": "9H7enat0PKxL"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#pip install keras-tuner"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AfJck8QWRFTF",
        "outputId": "6a5fe8a1-6b1c-4d41-9da9-9054be1a475a"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting keras-tuner\n",
            "  Downloading keras_tuner-1.1.0-py3-none-any.whl (98 kB)\n",
            "\u001b[?25l\r\u001b[K     |███▍                            | 10 kB 20.9 MB/s eta 0:00:01\r\u001b[K     |██████▊                         | 20 kB 13.1 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 30 kB 9.6 MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 40 kB 8.5 MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 51 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 61 kB 4.8 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▍        | 71 kB 4.3 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▊     | 81 kB 4.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 92 kB 4.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 98 kB 2.8 MB/s \n",
            "\u001b[?25hCollecting kt-legacy\n",
            "  Downloading kt_legacy-1.0.4-py3-none-any.whl (9.6 kB)\n",
            "Requirement already satisfied: ipython in /usr/local/lib/python3.7/dist-packages (from keras-tuner) (5.5.0)\n",
            "Requirement already satisfied: tensorboard in /usr/local/lib/python3.7/dist-packages (from keras-tuner) (2.7.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from keras-tuner) (21.3)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from keras-tuner) (1.19.5)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from keras-tuner) (2.23.0)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from keras-tuner) (1.4.1)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (57.4.0)\n",
            "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (1.0.18)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (4.4.2)\n",
            "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (0.8.1)\n",
            "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (5.1.1)\n",
            "Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (4.8.0)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (0.7.5)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython->keras-tuner) (2.6.1)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython->keras-tuner) (0.2.5)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython->keras-tuner) (1.15.0)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->keras-tuner) (3.0.6)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect->ipython->keras-tuner) (0.7.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->keras-tuner) (2021.10.8)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->keras-tuner) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->keras-tuner) (2.10)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->keras-tuner) (1.24.3)\n",
            "Requirement already satisfied: wheel>=0.26 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (0.37.1)\n",
            "Requirement already satisfied: absl-py>=0.4 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (0.12.0)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (1.0.1)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (3.3.6)\n",
            "Requirement already satisfied: protobuf>=3.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (3.17.3)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (1.8.1)\n",
            "Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (1.35.0)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (0.4.6)\n",
            "Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (0.6.1)\n",
            "Requirement already satisfied: grpcio>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard->keras-tuner) (1.43.0)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard->keras-tuner) (4.2.4)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard->keras-tuner) (4.8)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard->keras-tuner) (0.2.8)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard->keras-tuner) (1.3.0)\n",
            "Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard->keras-tuner) (4.10.0)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard->keras-tuner) (3.10.0.2)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard->keras-tuner) (3.7.0)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard->keras-tuner) (0.4.8)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard->keras-tuner) (3.1.1)\n",
            "Installing collected packages: kt-legacy, keras-tuner\n",
            "Successfully installed keras-tuner-1.1.0 kt-legacy-1.0.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import keras\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LeakyReLU,PReLU,ELU\n",
        "from keras.layers import Dropout\n",
        "from tensorflow.keras import layers\n",
        "from kerastuner.tuners import RandomSearch\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from keras.wrappers.scikit_learn import KerasClassifier"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "waB3P8McPK0F",
        "outputId": "b66e05b1-9d63-4ab6-bb11-6852249e7c19"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:7: DeprecationWarning: `import kerastuner` is deprecated, please use `import keras_tuner`.\n",
            "  import sys\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.shape,y_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0DcQUwBDPK2Z",
        "outputId": "a4b00aa8-52be-439d-9a54-793a4e840a3c"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((120, 4), (120, 3))"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_new = Sequential()\n",
        "model_new.add(Dense(32,kernel_initializer='he_uniform',activation='relu',input_dim=4))\n",
        "#model_new.add(Dropout(0.3))\n",
        "#model_new.add(Dense(28,kernel_initializer='he_uniform',activation='relu'))\n",
        "#model_new.add(Dense(24,kernel_initializer='he_uniform',activation='relu'))\n",
        "#model_new.add(Dense(16,kernel_initializer='he_uniform',activation='relu'))\n",
        "\n",
        "model_new.add(Dense(3,kernel_initializer='he_uniform',activation='softmax'))"
      ],
      "metadata": {
        "id": "wLDjSKoQPK5C"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_new.compile(optimizer='Adam',loss='categorical_crossentropy',metrics=['accuracy'])"
      ],
      "metadata": {
        "id": "Go92ltHZPK7Z"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_new.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "--xyBMrTPK9_",
        "outputId": "04ffc219-75f6-4f82-f302-8d8b0d99a44c"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_1 (Dense)             (None, 32)                160       \n",
            "                                                                 \n",
            " dense_2 (Dense)             (None, 3)                 99        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 259\n",
            "Trainable params: 259\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_history=model_new.fit(X_train,y_train,batch_size=100,epochs=500)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WGOgTnSvPLAk",
        "outputId": "2eb91edd-ddb6-4c4e-8e4d-7b591ccaf627"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/500\n",
            "2/2 [==============================] - 1s 8ms/step - loss: 3.0319 - accuracy: 0.3417\n",
            "Epoch 2/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 2.8507 - accuracy: 0.3417\n",
            "Epoch 3/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 2.6809 - accuracy: 0.3417\n",
            "Epoch 4/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 2.5185 - accuracy: 0.3417\n",
            "Epoch 5/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 2.3630 - accuracy: 0.3417\n",
            "Epoch 6/500\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 2.2114 - accuracy: 0.3417\n",
            "Epoch 7/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 2.0615 - accuracy: 0.3417\n",
            "Epoch 8/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 1.9100 - accuracy: 0.3500\n",
            "Epoch 9/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 1.7697 - accuracy: 0.4167\n",
            "Epoch 10/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 1.6213 - accuracy: 0.5833\n",
            "Epoch 11/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 1.4780 - accuracy: 0.6167\n",
            "Epoch 12/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 1.3406 - accuracy: 0.6333\n",
            "Epoch 13/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 1.2083 - accuracy: 0.6417\n",
            "Epoch 14/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 1.0854 - accuracy: 0.6500\n",
            "Epoch 15/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.9684 - accuracy: 0.6583\n",
            "Epoch 16/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.8742 - accuracy: 0.6833\n",
            "Epoch 17/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.7927 - accuracy: 0.7250\n",
            "Epoch 18/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.7294 - accuracy: 0.8250\n",
            "Epoch 19/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.6846 - accuracy: 0.8583\n",
            "Epoch 20/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.6546 - accuracy: 0.9167\n",
            "Epoch 21/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.6358 - accuracy: 0.9333\n",
            "Epoch 22/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.6249 - accuracy: 0.8750\n",
            "Epoch 23/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.6195 - accuracy: 0.8750\n",
            "Epoch 24/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.6208 - accuracy: 0.8667\n",
            "Epoch 25/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.6186 - accuracy: 0.8583\n",
            "Epoch 26/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.6168 - accuracy: 0.8333\n",
            "Epoch 27/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.6134 - accuracy: 0.8083\n",
            "Epoch 28/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.6089 - accuracy: 0.8083\n",
            "Epoch 29/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.6003 - accuracy: 0.8083\n",
            "Epoch 30/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.5905 - accuracy: 0.8167\n",
            "Epoch 31/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.5798 - accuracy: 0.8583\n",
            "Epoch 32/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.5696 - accuracy: 0.8583\n",
            "Epoch 33/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.5598 - accuracy: 0.8667\n",
            "Epoch 34/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.5509 - accuracy: 0.8833\n",
            "Epoch 35/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.5427 - accuracy: 0.8833\n",
            "Epoch 36/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.5361 - accuracy: 0.8833\n",
            "Epoch 37/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.5296 - accuracy: 0.8833\n",
            "Epoch 38/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.5233 - accuracy: 0.9083\n",
            "Epoch 39/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.5179 - accuracy: 0.9250\n",
            "Epoch 40/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.5132 - accuracy: 0.9333\n",
            "Epoch 41/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.5089 - accuracy: 0.9417\n",
            "Epoch 42/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.5046 - accuracy: 0.9417\n",
            "Epoch 43/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.5005 - accuracy: 0.9417\n",
            "Epoch 44/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4979 - accuracy: 0.9417\n",
            "Epoch 45/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.4941 - accuracy: 0.9417\n",
            "Epoch 46/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4905 - accuracy: 0.9417\n",
            "Epoch 47/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.4863 - accuracy: 0.9417\n",
            "Epoch 48/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.4815 - accuracy: 0.9417\n",
            "Epoch 49/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4766 - accuracy: 0.9417\n",
            "Epoch 50/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.4724 - accuracy: 0.9417\n",
            "Epoch 51/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.4689 - accuracy: 0.9417\n",
            "Epoch 52/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.4651 - accuracy: 0.9333\n",
            "Epoch 53/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4619 - accuracy: 0.9250\n",
            "Epoch 54/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.4592 - accuracy: 0.9250\n",
            "Epoch 55/500\n",
            "2/2 [==============================] - 0s 19ms/step - loss: 0.4561 - accuracy: 0.9250\n",
            "Epoch 56/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.4531 - accuracy: 0.9250\n",
            "Epoch 57/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4499 - accuracy: 0.9250\n",
            "Epoch 58/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.4470 - accuracy: 0.9250\n",
            "Epoch 59/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.4437 - accuracy: 0.9250\n",
            "Epoch 60/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4409 - accuracy: 0.9250\n",
            "Epoch 61/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.4385 - accuracy: 0.9250\n",
            "Epoch 62/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.4358 - accuracy: 0.9250\n",
            "Epoch 63/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4332 - accuracy: 0.9250\n",
            "Epoch 64/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4305 - accuracy: 0.9250\n",
            "Epoch 65/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.4279 - accuracy: 0.9333\n",
            "Epoch 66/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.4254 - accuracy: 0.9333\n",
            "Epoch 67/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.4228 - accuracy: 0.9333\n",
            "Epoch 68/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.4205 - accuracy: 0.9333\n",
            "Epoch 69/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4181 - accuracy: 0.9333\n",
            "Epoch 70/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.4158 - accuracy: 0.9333\n",
            "Epoch 71/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.4136 - accuracy: 0.9333\n",
            "Epoch 72/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.4113 - accuracy: 0.9333\n",
            "Epoch 73/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.4091 - accuracy: 0.9417\n",
            "Epoch 74/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.4068 - accuracy: 0.9417\n",
            "Epoch 75/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.4047 - accuracy: 0.9417\n",
            "Epoch 76/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.4028 - accuracy: 0.9500\n",
            "Epoch 77/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.4004 - accuracy: 0.9500\n",
            "Epoch 78/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3985 - accuracy: 0.9333\n",
            "Epoch 79/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3973 - accuracy: 0.9333\n",
            "Epoch 80/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3969 - accuracy: 0.9167\n",
            "Epoch 81/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3964 - accuracy: 0.9250\n",
            "Epoch 82/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.3945 - accuracy: 0.9167\n",
            "Epoch 83/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3921 - accuracy: 0.9250\n",
            "Epoch 84/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3890 - accuracy: 0.9167\n",
            "Epoch 85/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3872 - accuracy: 0.9333\n",
            "Epoch 86/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3846 - accuracy: 0.9333\n",
            "Epoch 87/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3827 - accuracy: 0.9500\n",
            "Epoch 88/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3808 - accuracy: 0.9500\n",
            "Epoch 89/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3792 - accuracy: 0.9500\n",
            "Epoch 90/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3776 - accuracy: 0.9500\n",
            "Epoch 91/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3760 - accuracy: 0.9500\n",
            "Epoch 92/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3744 - accuracy: 0.9500\n",
            "Epoch 93/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3726 - accuracy: 0.9500\n",
            "Epoch 94/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3710 - accuracy: 0.9500\n",
            "Epoch 95/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3695 - accuracy: 0.9500\n",
            "Epoch 96/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3681 - accuracy: 0.9500\n",
            "Epoch 97/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3666 - accuracy: 0.9500\n",
            "Epoch 98/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3652 - accuracy: 0.9500\n",
            "Epoch 99/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3637 - accuracy: 0.9500\n",
            "Epoch 100/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3622 - accuracy: 0.9500\n",
            "Epoch 101/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3607 - accuracy: 0.9500\n",
            "Epoch 102/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3594 - accuracy: 0.9500\n",
            "Epoch 103/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3579 - accuracy: 0.9500\n",
            "Epoch 104/500\n",
            "2/2 [==============================] - 0s 16ms/step - loss: 0.3566 - accuracy: 0.9500\n",
            "Epoch 105/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.3553 - accuracy: 0.9500\n",
            "Epoch 106/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3539 - accuracy: 0.9500\n",
            "Epoch 107/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3528 - accuracy: 0.9500\n",
            "Epoch 108/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3521 - accuracy: 0.9417\n",
            "Epoch 109/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3514 - accuracy: 0.9333\n",
            "Epoch 110/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3504 - accuracy: 0.9333\n",
            "Epoch 111/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3492 - accuracy: 0.9333\n",
            "Epoch 112/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3482 - accuracy: 0.9333\n",
            "Epoch 113/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3468 - accuracy: 0.9333\n",
            "Epoch 114/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3450 - accuracy: 0.9417\n",
            "Epoch 115/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3432 - accuracy: 0.9500\n",
            "Epoch 116/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3415 - accuracy: 0.9500\n",
            "Epoch 117/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3397 - accuracy: 0.9583\n",
            "Epoch 118/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3394 - accuracy: 0.9583\n",
            "Epoch 119/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3382 - accuracy: 0.9583\n",
            "Epoch 120/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3375 - accuracy: 0.9583\n",
            "Epoch 121/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.3364 - accuracy: 0.9583\n",
            "Epoch 122/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3351 - accuracy: 0.9667\n",
            "Epoch 123/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.3338 - accuracy: 0.9667\n",
            "Epoch 124/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3326 - accuracy: 0.9667\n",
            "Epoch 125/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.3312 - accuracy: 0.9583\n",
            "Epoch 126/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3296 - accuracy: 0.9583\n",
            "Epoch 127/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3283 - accuracy: 0.9583\n",
            "Epoch 128/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3275 - accuracy: 0.9583\n",
            "Epoch 129/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3266 - accuracy: 0.9583\n",
            "Epoch 130/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3264 - accuracy: 0.9500\n",
            "Epoch 131/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3258 - accuracy: 0.9417\n",
            "Epoch 132/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.3245 - accuracy: 0.9417\n",
            "Epoch 133/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.3227 - accuracy: 0.9500\n",
            "Epoch 134/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.3212 - accuracy: 0.9583\n",
            "Epoch 135/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3199 - accuracy: 0.9583\n",
            "Epoch 136/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.3195 - accuracy: 0.9583\n",
            "Epoch 137/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3180 - accuracy: 0.9583\n",
            "Epoch 138/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3169 - accuracy: 0.9583\n",
            "Epoch 139/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3159 - accuracy: 0.9583\n",
            "Epoch 140/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3149 - accuracy: 0.9583\n",
            "Epoch 141/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3139 - accuracy: 0.9583\n",
            "Epoch 142/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.3129 - accuracy: 0.9583\n",
            "Epoch 143/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3123 - accuracy: 0.9667\n",
            "Epoch 144/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3116 - accuracy: 0.9667\n",
            "Epoch 145/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.3107 - accuracy: 0.9667\n",
            "Epoch 146/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.3097 - accuracy: 0.9667\n",
            "Epoch 147/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3084 - accuracy: 0.9667\n",
            "Epoch 148/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3073 - accuracy: 0.9583\n",
            "Epoch 149/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3063 - accuracy: 0.9583\n",
            "Epoch 150/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3053 - accuracy: 0.9583\n",
            "Epoch 151/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3043 - accuracy: 0.9583\n",
            "Epoch 152/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.3034 - accuracy: 0.9583\n",
            "Epoch 153/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.3024 - accuracy: 0.9583\n",
            "Epoch 154/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.3018 - accuracy: 0.9583\n",
            "Epoch 155/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.3006 - accuracy: 0.9583\n",
            "Epoch 156/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2999 - accuracy: 0.9583\n",
            "Epoch 157/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2991 - accuracy: 0.9667\n",
            "Epoch 158/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2983 - accuracy: 0.9667\n",
            "Epoch 159/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2977 - accuracy: 0.9667\n",
            "Epoch 160/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2973 - accuracy: 0.9583\n",
            "Epoch 161/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2967 - accuracy: 0.9583\n",
            "Epoch 162/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2959 - accuracy: 0.9583\n",
            "Epoch 163/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2946 - accuracy: 0.9667\n",
            "Epoch 164/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2938 - accuracy: 0.9667\n",
            "Epoch 165/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2925 - accuracy: 0.9667\n",
            "Epoch 166/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2915 - accuracy: 0.9667\n",
            "Epoch 167/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2904 - accuracy: 0.9667\n",
            "Epoch 168/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2899 - accuracy: 0.9583\n",
            "Epoch 169/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2887 - accuracy: 0.9583\n",
            "Epoch 170/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2878 - accuracy: 0.9583\n",
            "Epoch 171/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2869 - accuracy: 0.9583\n",
            "Epoch 172/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2861 - accuracy: 0.9667\n",
            "Epoch 173/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2861 - accuracy: 0.9667\n",
            "Epoch 174/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2859 - accuracy: 0.9583\n",
            "Epoch 175/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2854 - accuracy: 0.9583\n",
            "Epoch 176/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.2844 - accuracy: 0.9583\n",
            "Epoch 177/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2830 - accuracy: 0.9667\n",
            "Epoch 178/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2817 - accuracy: 0.9667\n",
            "Epoch 179/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2806 - accuracy: 0.9667\n",
            "Epoch 180/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2797 - accuracy: 0.9583\n",
            "Epoch 181/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2796 - accuracy: 0.9583\n",
            "Epoch 182/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2787 - accuracy: 0.9583\n",
            "Epoch 183/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2779 - accuracy: 0.9583\n",
            "Epoch 184/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2770 - accuracy: 0.9583\n",
            "Epoch 185/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2761 - accuracy: 0.9583\n",
            "Epoch 186/500\n",
            "2/2 [==============================] - 0s 3ms/step - loss: 0.2757 - accuracy: 0.9667\n",
            "Epoch 187/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2747 - accuracy: 0.9667\n",
            "Epoch 188/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2740 - accuracy: 0.9667\n",
            "Epoch 189/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2734 - accuracy: 0.9667\n",
            "Epoch 190/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2726 - accuracy: 0.9667\n",
            "Epoch 191/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2717 - accuracy: 0.9667\n",
            "Epoch 192/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2710 - accuracy: 0.9667\n",
            "Epoch 193/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2702 - accuracy: 0.9583\n",
            "Epoch 194/500\n",
            "2/2 [==============================] - 0s 3ms/step - loss: 0.2699 - accuracy: 0.9583\n",
            "Epoch 195/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2695 - accuracy: 0.9583\n",
            "Epoch 196/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2686 - accuracy: 0.9583\n",
            "Epoch 197/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2676 - accuracy: 0.9583\n",
            "Epoch 198/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2666 - accuracy: 0.9583\n",
            "Epoch 199/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2660 - accuracy: 0.9667\n",
            "Epoch 200/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2657 - accuracy: 0.9667\n",
            "Epoch 201/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2657 - accuracy: 0.9667\n",
            "Epoch 202/500\n",
            "2/2 [==============================] - 0s 3ms/step - loss: 0.2652 - accuracy: 0.9667\n",
            "Epoch 203/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2645 - accuracy: 0.9667\n",
            "Epoch 204/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2635 - accuracy: 0.9667\n",
            "Epoch 205/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2626 - accuracy: 0.9667\n",
            "Epoch 206/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2615 - accuracy: 0.9667\n",
            "Epoch 207/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2608 - accuracy: 0.9667\n",
            "Epoch 208/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2601 - accuracy: 0.9667\n",
            "Epoch 209/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.2594 - accuracy: 0.9667\n",
            "Epoch 210/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2591 - accuracy: 0.9667\n",
            "Epoch 211/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2581 - accuracy: 0.9667\n",
            "Epoch 212/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 0.2575 - accuracy: 0.9667\n",
            "Epoch 213/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.2569 - accuracy: 0.9667\n",
            "Epoch 214/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2565 - accuracy: 0.9667\n",
            "Epoch 215/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2560 - accuracy: 0.9667\n",
            "Epoch 216/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2555 - accuracy: 0.9667\n",
            "Epoch 217/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2550 - accuracy: 0.9667\n",
            "Epoch 218/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2542 - accuracy: 0.9667\n",
            "Epoch 219/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2532 - accuracy: 0.9667\n",
            "Epoch 220/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2523 - accuracy: 0.9667\n",
            "Epoch 221/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.2516 - accuracy: 0.9667\n",
            "Epoch 222/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.2514 - accuracy: 0.9583\n",
            "Epoch 223/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 0.2515 - accuracy: 0.9583\n",
            "Epoch 224/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2515 - accuracy: 0.9583\n",
            "Epoch 225/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2510 - accuracy: 0.9583\n",
            "Epoch 226/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2500 - accuracy: 0.9583\n",
            "Epoch 227/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2487 - accuracy: 0.9583\n",
            "Epoch 228/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2473 - accuracy: 0.9667\n",
            "Epoch 229/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2466 - accuracy: 0.9667\n",
            "Epoch 230/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2462 - accuracy: 0.9667\n",
            "Epoch 231/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2468 - accuracy: 0.9667\n",
            "Epoch 232/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2480 - accuracy: 0.9583\n",
            "Epoch 233/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2475 - accuracy: 0.9583\n",
            "Epoch 234/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.2464 - accuracy: 0.9583\n",
            "Epoch 235/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2444 - accuracy: 0.9667\n",
            "Epoch 236/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2436 - accuracy: 0.9667\n",
            "Epoch 237/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2419 - accuracy: 0.9667\n",
            "Epoch 238/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2414 - accuracy: 0.9667\n",
            "Epoch 239/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2409 - accuracy: 0.9667\n",
            "Epoch 240/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2403 - accuracy: 0.9667\n",
            "Epoch 241/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2398 - accuracy: 0.9667\n",
            "Epoch 242/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2392 - accuracy: 0.9667\n",
            "Epoch 243/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.2386 - accuracy: 0.9667\n",
            "Epoch 244/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2382 - accuracy: 0.9667\n",
            "Epoch 245/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2378 - accuracy: 0.9583\n",
            "Epoch 246/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2379 - accuracy: 0.9583\n",
            "Epoch 247/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2373 - accuracy: 0.9583\n",
            "Epoch 248/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2363 - accuracy: 0.9583\n",
            "Epoch 249/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2355 - accuracy: 0.9667\n",
            "Epoch 250/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2343 - accuracy: 0.9667\n",
            "Epoch 251/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2338 - accuracy: 0.9667\n",
            "Epoch 252/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2339 - accuracy: 0.9667\n",
            "Epoch 253/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2346 - accuracy: 0.9667\n",
            "Epoch 254/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2346 - accuracy: 0.9583\n",
            "Epoch 255/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2341 - accuracy: 0.9583\n",
            "Epoch 256/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2339 - accuracy: 0.9583\n",
            "Epoch 257/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.2334 - accuracy: 0.9583\n",
            "Epoch 258/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2322 - accuracy: 0.9583\n",
            "Epoch 259/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2312 - accuracy: 0.9667\n",
            "Epoch 260/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2301 - accuracy: 0.9667\n",
            "Epoch 261/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2292 - accuracy: 0.9667\n",
            "Epoch 262/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2283 - accuracy: 0.9667\n",
            "Epoch 263/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2274 - accuracy: 0.9667\n",
            "Epoch 264/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2273 - accuracy: 0.9667\n",
            "Epoch 265/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2269 - accuracy: 0.9667\n",
            "Epoch 266/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2269 - accuracy: 0.9583\n",
            "Epoch 267/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2274 - accuracy: 0.9583\n",
            "Epoch 268/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2277 - accuracy: 0.9667\n",
            "Epoch 269/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2279 - accuracy: 0.9667\n",
            "Epoch 270/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2288 - accuracy: 0.9667\n",
            "Epoch 271/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2287 - accuracy: 0.9667\n",
            "Epoch 272/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2271 - accuracy: 0.9667\n",
            "Epoch 273/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2259 - accuracy: 0.9667\n",
            "Epoch 274/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2230 - accuracy: 0.9583\n",
            "Epoch 275/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2225 - accuracy: 0.9667\n",
            "Epoch 276/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.2210 - accuracy: 0.9667\n",
            "Epoch 277/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2205 - accuracy: 0.9667\n",
            "Epoch 278/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2206 - accuracy: 0.9667\n",
            "Epoch 279/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2205 - accuracy: 0.9667\n",
            "Epoch 280/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2203 - accuracy: 0.9667\n",
            "Epoch 281/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2199 - accuracy: 0.9667\n",
            "Epoch 282/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2199 - accuracy: 0.9667\n",
            "Epoch 283/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2194 - accuracy: 0.9667\n",
            "Epoch 284/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2183 - accuracy: 0.9667\n",
            "Epoch 285/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2179 - accuracy: 0.9667\n",
            "Epoch 286/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2168 - accuracy: 0.9667\n",
            "Epoch 287/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2164 - accuracy: 0.9667\n",
            "Epoch 288/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2159 - accuracy: 0.9667\n",
            "Epoch 289/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2153 - accuracy: 0.9667\n",
            "Epoch 290/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2147 - accuracy: 0.9667\n",
            "Epoch 291/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2141 - accuracy: 0.9667\n",
            "Epoch 292/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2136 - accuracy: 0.9667\n",
            "Epoch 293/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2130 - accuracy: 0.9667\n",
            "Epoch 294/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2126 - accuracy: 0.9667\n",
            "Epoch 295/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.2121 - accuracy: 0.9667\n",
            "Epoch 296/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2116 - accuracy: 0.9667\n",
            "Epoch 297/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2111 - accuracy: 0.9667\n",
            "Epoch 298/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2109 - accuracy: 0.9667\n",
            "Epoch 299/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.2104 - accuracy: 0.9667\n",
            "Epoch 300/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2099 - accuracy: 0.9667\n",
            "Epoch 301/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2094 - accuracy: 0.9667\n",
            "Epoch 302/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2089 - accuracy: 0.9667\n",
            "Epoch 303/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2084 - accuracy: 0.9667\n",
            "Epoch 304/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2081 - accuracy: 0.9667\n",
            "Epoch 305/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2075 - accuracy: 0.9667\n",
            "Epoch 306/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2070 - accuracy: 0.9667\n",
            "Epoch 307/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2067 - accuracy: 0.9667\n",
            "Epoch 308/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2065 - accuracy: 0.9667\n",
            "Epoch 309/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2059 - accuracy: 0.9667\n",
            "Epoch 310/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2055 - accuracy: 0.9667\n",
            "Epoch 311/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2048 - accuracy: 0.9667\n",
            "Epoch 312/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 0.2045 - accuracy: 0.9667\n",
            "Epoch 313/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2040 - accuracy: 0.9667\n",
            "Epoch 314/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2035 - accuracy: 0.9667\n",
            "Epoch 315/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2031 - accuracy: 0.9667\n",
            "Epoch 316/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2028 - accuracy: 0.9667\n",
            "Epoch 317/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2025 - accuracy: 0.9667\n",
            "Epoch 318/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2025 - accuracy: 0.9667\n",
            "Epoch 319/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2024 - accuracy: 0.9667\n",
            "Epoch 320/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.2023 - accuracy: 0.9667\n",
            "Epoch 321/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.2015 - accuracy: 0.9667\n",
            "Epoch 322/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.2007 - accuracy: 0.9667\n",
            "Epoch 323/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1997 - accuracy: 0.9667\n",
            "Epoch 324/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1997 - accuracy: 0.9667\n",
            "Epoch 325/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1990 - accuracy: 0.9667\n",
            "Epoch 326/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1985 - accuracy: 0.9667\n",
            "Epoch 327/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1984 - accuracy: 0.9667\n",
            "Epoch 328/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1980 - accuracy: 0.9667\n",
            "Epoch 329/500\n",
            "2/2 [==============================] - 0s 15ms/step - loss: 0.1975 - accuracy: 0.9667\n",
            "Epoch 330/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1974 - accuracy: 0.9667\n",
            "Epoch 331/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1970 - accuracy: 0.9667\n",
            "Epoch 332/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1965 - accuracy: 0.9667\n",
            "Epoch 333/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1959 - accuracy: 0.9667\n",
            "Epoch 334/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 0.1954 - accuracy: 0.9667\n",
            "Epoch 335/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1949 - accuracy: 0.9667\n",
            "Epoch 336/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1948 - accuracy: 0.9667\n",
            "Epoch 337/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1943 - accuracy: 0.9667\n",
            "Epoch 338/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1939 - accuracy: 0.9667\n",
            "Epoch 339/500\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 0.1935 - accuracy: 0.9667\n",
            "Epoch 340/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1933 - accuracy: 0.9667\n",
            "Epoch 341/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1929 - accuracy: 0.9667\n",
            "Epoch 342/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1925 - accuracy: 0.9667\n",
            "Epoch 343/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1923 - accuracy: 0.9667\n",
            "Epoch 344/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1923 - accuracy: 0.9667\n",
            "Epoch 345/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1920 - accuracy: 0.9667\n",
            "Epoch 346/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1913 - accuracy: 0.9667\n",
            "Epoch 347/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1910 - accuracy: 0.9667\n",
            "Epoch 348/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1906 - accuracy: 0.9667\n",
            "Epoch 349/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1897 - accuracy: 0.9667\n",
            "Epoch 350/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.1897 - accuracy: 0.9667\n",
            "Epoch 351/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1892 - accuracy: 0.9667\n",
            "Epoch 352/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1888 - accuracy: 0.9667\n",
            "Epoch 353/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1883 - accuracy: 0.9667\n",
            "Epoch 354/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1883 - accuracy: 0.9667\n",
            "Epoch 355/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1876 - accuracy: 0.9667\n",
            "Epoch 356/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1871 - accuracy: 0.9667\n",
            "Epoch 357/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1866 - accuracy: 0.9667\n",
            "Epoch 358/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1864 - accuracy: 0.9667\n",
            "Epoch 359/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1860 - accuracy: 0.9667\n",
            "Epoch 360/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1858 - accuracy: 0.9667\n",
            "Epoch 361/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1853 - accuracy: 0.9667\n",
            "Epoch 362/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1850 - accuracy: 0.9667\n",
            "Epoch 363/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1846 - accuracy: 0.9667\n",
            "Epoch 364/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1842 - accuracy: 0.9667\n",
            "Epoch 365/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1840 - accuracy: 0.9667\n",
            "Epoch 366/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.1837 - accuracy: 0.9667\n",
            "Epoch 367/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1832 - accuracy: 0.9667\n",
            "Epoch 368/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1826 - accuracy: 0.9667\n",
            "Epoch 369/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1829 - accuracy: 0.9667\n",
            "Epoch 370/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1834 - accuracy: 0.9667\n",
            "Epoch 371/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1826 - accuracy: 0.9667\n",
            "Epoch 372/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1818 - accuracy: 0.9667\n",
            "Epoch 373/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1812 - accuracy: 0.9667\n",
            "Epoch 374/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1808 - accuracy: 0.9667\n",
            "Epoch 375/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1804 - accuracy: 0.9667\n",
            "Epoch 376/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1803 - accuracy: 0.9667\n",
            "Epoch 377/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1797 - accuracy: 0.9667\n",
            "Epoch 378/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1796 - accuracy: 0.9667\n",
            "Epoch 379/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1793 - accuracy: 0.9667\n",
            "Epoch 380/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1791 - accuracy: 0.9667\n",
            "Epoch 381/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1786 - accuracy: 0.9667\n",
            "Epoch 382/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1787 - accuracy: 0.9667\n",
            "Epoch 383/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1778 - accuracy: 0.9667\n",
            "Epoch 384/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1775 - accuracy: 0.9667\n",
            "Epoch 385/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1773 - accuracy: 0.9667\n",
            "Epoch 386/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1768 - accuracy: 0.9667\n",
            "Epoch 387/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1764 - accuracy: 0.9667\n",
            "Epoch 388/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1760 - accuracy: 0.9667\n",
            "Epoch 389/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1759 - accuracy: 0.9667\n",
            "Epoch 390/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1758 - accuracy: 0.9667\n",
            "Epoch 391/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1760 - accuracy: 0.9667\n",
            "Epoch 392/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1753 - accuracy: 0.9667\n",
            "Epoch 393/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1747 - accuracy: 0.9667\n",
            "Epoch 394/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.1743 - accuracy: 0.9667\n",
            "Epoch 395/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1739 - accuracy: 0.9667\n",
            "Epoch 396/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1741 - accuracy: 0.9667\n",
            "Epoch 397/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1739 - accuracy: 0.9750\n",
            "Epoch 398/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1735 - accuracy: 0.9667\n",
            "Epoch 399/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1730 - accuracy: 0.9667\n",
            "Epoch 400/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1726 - accuracy: 0.9667\n",
            "Epoch 401/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1723 - accuracy: 0.9667\n",
            "Epoch 402/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1720 - accuracy: 0.9667\n",
            "Epoch 403/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1716 - accuracy: 0.9667\n",
            "Epoch 404/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1710 - accuracy: 0.9667\n",
            "Epoch 405/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1711 - accuracy: 0.9667\n",
            "Epoch 406/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1712 - accuracy: 0.9667\n",
            "Epoch 407/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1725 - accuracy: 0.9667\n",
            "Epoch 408/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.1737 - accuracy: 0.9667\n",
            "Epoch 409/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1737 - accuracy: 0.9667\n",
            "Epoch 410/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1723 - accuracy: 0.9667\n",
            "Epoch 411/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1708 - accuracy: 0.9667\n",
            "Epoch 412/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1689 - accuracy: 0.9667\n",
            "Epoch 413/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1687 - accuracy: 0.9667\n",
            "Epoch 414/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1687 - accuracy: 0.9667\n",
            "Epoch 415/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1687 - accuracy: 0.9750\n",
            "Epoch 416/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1685 - accuracy: 0.9750\n",
            "Epoch 417/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.1680 - accuracy: 0.9750\n",
            "Epoch 418/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1674 - accuracy: 0.9750\n",
            "Epoch 419/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1670 - accuracy: 0.9667\n",
            "Epoch 420/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1664 - accuracy: 0.9667\n",
            "Epoch 421/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1661 - accuracy: 0.9667\n",
            "Epoch 422/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1659 - accuracy: 0.9667\n",
            "Epoch 423/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1657 - accuracy: 0.9667\n",
            "Epoch 424/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1654 - accuracy: 0.9667\n",
            "Epoch 425/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1651 - accuracy: 0.9667\n",
            "Epoch 426/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1648 - accuracy: 0.9667\n",
            "Epoch 427/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1644 - accuracy: 0.9667\n",
            "Epoch 428/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1641 - accuracy: 0.9667\n",
            "Epoch 429/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1638 - accuracy: 0.9667\n",
            "Epoch 430/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 0.1637 - accuracy: 0.9667\n",
            "Epoch 431/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.1633 - accuracy: 0.9667\n",
            "Epoch 432/500\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 0.1631 - accuracy: 0.9667\n",
            "Epoch 433/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1627 - accuracy: 0.9667\n",
            "Epoch 434/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 0.1624 - accuracy: 0.9667\n",
            "Epoch 435/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.1622 - accuracy: 0.9667\n",
            "Epoch 436/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1618 - accuracy: 0.9667\n",
            "Epoch 437/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1616 - accuracy: 0.9667\n",
            "Epoch 438/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1621 - accuracy: 0.9667\n",
            "Epoch 439/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1619 - accuracy: 0.9667\n",
            "Epoch 440/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1616 - accuracy: 0.9667\n",
            "Epoch 441/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1611 - accuracy: 0.9667\n",
            "Epoch 442/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.1605 - accuracy: 0.9667\n",
            "Epoch 443/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.1600 - accuracy: 0.9667\n",
            "Epoch 444/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.1597 - accuracy: 0.9667\n",
            "Epoch 445/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1594 - accuracy: 0.9667\n",
            "Epoch 446/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1592 - accuracy: 0.9750\n",
            "Epoch 447/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.1594 - accuracy: 0.9750\n",
            "Epoch 448/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1591 - accuracy: 0.9750\n",
            "Epoch 449/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 0.1587 - accuracy: 0.9750\n",
            "Epoch 450/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1584 - accuracy: 0.9750\n",
            "Epoch 451/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1580 - accuracy: 0.9750\n",
            "Epoch 452/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1577 - accuracy: 0.9750\n",
            "Epoch 453/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1576 - accuracy: 0.9667\n",
            "Epoch 454/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1572 - accuracy: 0.9667\n",
            "Epoch 455/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 0.1568 - accuracy: 0.9667\n",
            "Epoch 456/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1567 - accuracy: 0.9667\n",
            "Epoch 457/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1563 - accuracy: 0.9667\n",
            "Epoch 458/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1560 - accuracy: 0.9667\n",
            "Epoch 459/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1558 - accuracy: 0.9667\n",
            "Epoch 460/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1556 - accuracy: 0.9667\n",
            "Epoch 461/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1552 - accuracy: 0.9667\n",
            "Epoch 462/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.1552 - accuracy: 0.9667\n",
            "Epoch 463/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1549 - accuracy: 0.9667\n",
            "Epoch 464/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1546 - accuracy: 0.9750\n",
            "Epoch 465/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1543 - accuracy: 0.9750\n",
            "Epoch 466/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1546 - accuracy: 0.9750\n",
            "Epoch 467/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1546 - accuracy: 0.9750\n",
            "Epoch 468/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1545 - accuracy: 0.9750\n",
            "Epoch 469/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1541 - accuracy: 0.9750\n",
            "Epoch 470/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1539 - accuracy: 0.9750\n",
            "Epoch 471/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1536 - accuracy: 0.9750\n",
            "Epoch 472/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1534 - accuracy: 0.9750\n",
            "Epoch 473/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1530 - accuracy: 0.9750\n",
            "Epoch 474/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1522 - accuracy: 0.9750\n",
            "Epoch 475/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1516 - accuracy: 0.9667\n",
            "Epoch 476/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1517 - accuracy: 0.9667\n",
            "Epoch 477/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1523 - accuracy: 0.9667\n",
            "Epoch 478/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1525 - accuracy: 0.9667\n",
            "Epoch 479/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1522 - accuracy: 0.9667\n",
            "Epoch 480/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1513 - accuracy: 0.9667\n",
            "Epoch 481/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1511 - accuracy: 0.9667\n",
            "Epoch 482/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1502 - accuracy: 0.9667\n",
            "Epoch 483/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1500 - accuracy: 0.9667\n",
            "Epoch 484/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 0.1498 - accuracy: 0.9667\n",
            "Epoch 485/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1496 - accuracy: 0.9667\n",
            "Epoch 486/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1494 - accuracy: 0.9667\n",
            "Epoch 487/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1493 - accuracy: 0.9667\n",
            "Epoch 488/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 0.1486 - accuracy: 0.9667\n",
            "Epoch 489/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 0.1491 - accuracy: 0.9667\n",
            "Epoch 490/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 0.1491 - accuracy: 0.9667\n",
            "Epoch 491/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1489 - accuracy: 0.9667\n",
            "Epoch 492/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1488 - accuracy: 0.9667\n",
            "Epoch 493/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 0.1482 - accuracy: 0.9667\n",
            "Epoch 494/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1480 - accuracy: 0.9667\n",
            "Epoch 495/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1477 - accuracy: 0.9667\n",
            "Epoch 496/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1475 - accuracy: 0.9667\n",
            "Epoch 497/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1471 - accuracy: 0.9667\n",
            "Epoch 498/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 0.1469 - accuracy: 0.9667\n",
            "Epoch 499/500\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 0.1466 - accuracy: 0.9667\n",
            "Epoch 500/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 0.1463 - accuracy: 0.9667\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model_new.predict(X_test)"
      ],
      "metadata": {
        "id": "ejPIruNxPLD7"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_test_class = np.argmax(y_test,axis=1)\n",
        "y_pred_class = np.argmax(y_pred,axis=1)"
      ],
      "metadata": {
        "id": "yLkNpe6ZMDpM"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report,confusion_matrix,accuracy_score"
      ],
      "metadata": {
        "id": "bWoXjDsbT26i"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_score(y_test_class,y_pred_class)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c0PYwxdcT29C",
        "outputId": "b664707e-562d-41b2-b32b-b8a566353277"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9666666666666667"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "confusion_matrix(y_test_class,y_pred_class)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1RgxQ3ZbT2_c",
        "outputId": "acaf34a6-6c39-4cf1-cd90-522e88c120ff"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[12,  0,  0],\n",
              "       [ 0,  8,  1],\n",
              "       [ 0,  0,  9]])"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test_class,y_pred_class))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JCvW3K3DT3Bz",
        "outputId": "0bbdddf5-52b3-42d8-afcb-0ff1b194e5bb"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       1.00      1.00      1.00        12\n",
            "           1       1.00      0.89      0.94         9\n",
            "           2       0.90      1.00      0.95         9\n",
            "\n",
            "    accuracy                           0.97        30\n",
            "   macro avg       0.97      0.96      0.96        30\n",
            "weighted avg       0.97      0.97      0.97        30\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test_class"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I6dxT2LyT3FO",
        "outputId": "b94524ff-195a-4b83-f7b1-a4c5ee19cd92"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 0, 0, 0, 1, 2, 2, 1, 0, 1, 0, 1,\n",
              "       2, 1, 0, 2, 1, 1, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NLcLej6ZVe4B",
        "outputId": "a7855ddb-1ff2-4393-a825-0c64696ca109"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 0, 0],\n",
              "       [0, 0, 1],\n",
              "       [1, 0, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [1, 0, 0],\n",
              "       [0, 0, 1],\n",
              "       [1, 0, 0],\n",
              "       [0, 1, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 0, 1],\n",
              "       [0, 0, 1],\n",
              "       [0, 1, 0],\n",
              "       [1, 0, 0],\n",
              "       [0, 1, 0],\n",
              "       [1, 0, 0],\n",
              "       [0, 1, 0],\n",
              "       [0, 0, 1],\n",
              "       [0, 1, 0],\n",
              "       [1, 0, 0],\n",
              "       [0, 0, 1],\n",
              "       [0, 1, 0],\n",
              "       [0, 1, 0],\n",
              "       [1, 0, 0],\n",
              "       [1, 0, 0]], dtype=uint8)"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VcXYJ1vqViAJ",
        "outputId": "16820326-0596-41c9-f42f-bb474f28c4e2"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[9.90763128e-01, 9.22392495e-03, 1.29685959e-05],\n",
              "       [1.06155197e-03, 2.37522364e-01, 7.61416078e-01],\n",
              "       [9.76236403e-01, 2.36890223e-02, 7.46483274e-05],\n",
              "       [1.06483661e-02, 8.68068814e-01, 1.21282846e-01],\n",
              "       [8.61810477e-05, 4.46783490e-02, 9.55235541e-01],\n",
              "       [6.31791539e-04, 1.54099256e-01, 8.45268965e-01],\n",
              "       [1.71212640e-04, 6.72370270e-02, 9.32591796e-01],\n",
              "       [9.84399319e-01, 1.55820707e-02, 1.86361904e-05],\n",
              "       [2.34916020e-04, 1.70411170e-01, 8.29353929e-01],\n",
              "       [9.57300723e-01, 4.25864719e-02, 1.12737682e-04],\n",
              "       [4.83955769e-03, 5.18449783e-01, 4.76710588e-01],\n",
              "       [9.95539963e-01, 4.45601949e-03, 4.06070785e-06],\n",
              "       [9.81217384e-01, 1.87657364e-02, 1.68053248e-05],\n",
              "       [9.89098191e-01, 1.08789857e-02, 2.28185909e-05],\n",
              "       [5.81945619e-03, 9.66671407e-01, 2.75091883e-02],\n",
              "       [5.66328876e-04, 1.96037620e-01, 8.03396106e-01],\n",
              "       [2.12803323e-04, 5.59273772e-02, 9.43859816e-01],\n",
              "       [7.93034025e-03, 8.72437418e-01, 1.19632281e-01],\n",
              "       [9.85066533e-01, 1.48786278e-02, 5.48755888e-05],\n",
              "       [3.46116652e-03, 4.85545933e-01, 5.10992885e-01],\n",
              "       [9.72223759e-01, 2.77421847e-02, 3.40716761e-05],\n",
              "       [1.10514769e-02, 9.56959367e-01, 3.19891535e-02],\n",
              "       [2.37082993e-03, 4.54969168e-01, 5.42659938e-01],\n",
              "       [6.02027914e-03, 7.37255752e-01, 2.56723970e-01],\n",
              "       [9.59576607e-01, 4.02521007e-02, 1.71322754e-04],\n",
              "       [6.15957484e-04, 2.69854099e-01, 7.29529917e-01],\n",
              "       [3.24614742e-03, 7.00274408e-01, 2.96479464e-01],\n",
              "       [8.10244400e-03, 5.66559851e-01, 4.25337672e-01],\n",
              "       [9.79592144e-01, 2.03530341e-02, 5.47208183e-05],\n",
              "       [8.95772517e-01, 1.04025252e-01, 2.02203373e-04]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_class"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0qWhsE-vVh8x",
        "outputId": "9c699794-6aff-419c-9ef3-1a6e9e3b1b9b"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 0, 0, 0, 1, 2, 2, 1, 0, 2, 0, 1,\n",
              "       2, 1, 0, 2, 1, 1, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "X2DQJNtyVh6j",
        "outputId": "b46b5b46-c674-43f6-9843-db4a0fee2802"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-36f40377-d21a-4c5a-ae27-effaafecd951\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal.length</th>\n",
              "      <th>sepal.width</th>\n",
              "      <th>petal.length</th>\n",
              "      <th>petal.width</th>\n",
              "      <th>variety</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Setosa</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-36f40377-d21a-4c5a-ae27-effaafecd951')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-36f40377-d21a-4c5a-ae27-effaafecd951 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-36f40377-d21a-4c5a-ae27-effaafecd951');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   sepal.length  sepal.width  petal.length  petal.width variety\n",
              "0           5.1          3.5           1.4          0.2  Setosa\n",
              "1           4.9          3.0           1.4          0.2  Setosa\n",
              "2           4.7          3.2           1.3          0.2  Setosa\n",
              "3           4.6          3.1           1.5          0.2  Setosa\n",
              "4           5.0          3.6           1.4          0.2  Setosa"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = np.array([[5.1,3.5,1.4,0.2]])"
      ],
      "metadata": {
        "id": "lFdEwV_QVh4J"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prediction = model_new.predict(data)\n",
        "prediction_class = np.argmax(prediction,axis=1)\n",
        "prediction_class"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J4vT7tl4V074",
        "outputId": "23ab809d-8a33-44c1-9d0e-0fbc034e2712"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0])"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    }
  ]
}